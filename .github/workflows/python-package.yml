name: Python GUI Application CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build-and-run:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # Added: Do not cancel other jobs if one matrix combination fails
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11"] # Updated: Added Python 3.11

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5 # Kept v5 as it's the latest recommended version
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest # Added: Install linting and testing tools
        # Install tkinter dependencies for Linux if running on Ubuntu
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          sudo apt-get update
          sudo apt-get install -y python3-tk
        fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        # You might need to create actual test files (e.g., test_app.py) for this to be effective.
        # For now, this will run any tests found by pytest.
        pytest

    - name: Verify Tailscale CLI (Linux)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        echo "Attempting to install Tailscale CLI for verification (optional for CI, but good for local testing)"
        curl -fsSL https://tailscale.com/install.sh | sh
        tailscale --version || echo "Tailscale CLI not installed, proceeding with build but connection tests will fail."

    - name: Verify Tailscale CLI (Windows)
      if: startsWith(matrix.os, 'windows')
      run: |
        echo "Please ensure Tailscale CLI is available in the CI environment for full functionality."
        # On Windows, Tailscale CLI might need to be pre-installed or installed via Chocolatey/Winget
        # For a simple CI check, we'll just try to run it.
        # choco install tailscale -y # Example if Chocolatey is available
        tailscale.exe --version || echo "Tailscale CLI not found, proceeding with build but connection tests will fail."
      shell: powershell

    - name: Run the application (basic test)
      run: |
        # This will attempt to run the main GUI script.
        # For a GUI application in a headless CI environment, this might just check for syntax errors
        # or basic execution without full GUI interaction.
        # You might need to adjust this for more robust testing (e.g., using a virtual display or mocking GUI components).
        python gui_main.py
      # Allow failure for GUI run in CI, as it might not have a display
      continue-on-error: true
